before_script:
- |
  if docker info &>/dev/null; then
    docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  fi

stages:
  - build
  - test
  - publish-image

build:
  stage: build
  extends: .build_template

container-scan:
  stage: test
  extends: .container_scan_template

app-unit-test:
  stage: test
  extends: .app_unit_test_template

app-func-test:
  stage: test
  extends: .app_func_test_template

app-lint:
  stage: test
  extends: .app_lint_template

dockerfile-lint:
  stage: test
  extends: .dockerfile_lint_template

tag-review:
  stage: publish-image
  extends: .tag_review_template

tag-staging:
  stage: publish-image
  extends: .tag_staging_template

tag-production:
  stage: publish-image
  extends: .tag_production_template

tag-production-branch:
  stage: publish-image
  extends: .tag_production_branch_template

.common:
  tags_template: &tags
    tags:
      - mintel
  docker_template: &docker
    services:
      - name: docker:stable-dind
        entrypoint:
        - dockerd
        - --host=unix:///var/run/docker.sock
        - --host=tcp://0.0.0.0:2375
    variables:
      DOCKER_DRIVER: overlay2
      DOCKER_HOST: tcp://docker:2375

.build_template:
  <<: *tags
  <<: *docker
  stage:
    build
  script:
    - command build_image
  only:
    - branches
    - tags

.container_scan_template:
  <<: *tags
  <<: *docker
  stage: test
  allow_failure: false
  script:
    - command container_scan
  except:
    variables:
      - $CONTAINER_SCANNING_DISABLED

.app_unit_test_template:
  <<: *tags
  <<: *docker
  stage: test
  allow_failure: false
  script:
    - make unit-test
  except:
    variables:
      - $APP_UNIT_TEST_DISABLED

.app_func_test_template:
  <<: *tags
  <<: *docker
  stage: test
  allow_failure: false
  script:
    - make func-test
  except:
    variables:
      - $APP_FUNC_TEST_DISABLED

.app_lint_template:
  <<: *tags
  <<: *docker
  stage: test
  allow_failure: false
  script:
    - make lint
  except:
    variables:
      - $APP_LINT_DISABLED

.dockerfile_lint_template:
  <<: *tags
  <<: *docker
  stage: test
  allow_failure: false
  script:
    - command dockerfile_lint
  except:
    variables:
      - $DOCKERFILE_LINT_DISABLED

.tag_review_template:
  <<: *tags
  <<: *docker
  stage: publish-image
  allow_failure: false
  script:
    - command publish_image
  only:
    - branches
  except:
    refs:
      - master
      - production
    variables:
      - $TAG_REVIEW_DISABLED

.tag_staging_template:
  <<: *tags
  <<: *docker
  stage: publish-image
  allow_failure: false
  script:
    - command publish_image
  only:
    - master
  except:
    variables:
      - $TAG_STAGING_DISABLED

.tag_production_template:
  <<: *tags
  <<: *docker
  stage: publish-image
  allow_failure: false
  script:
    - command publish_image
  only:
    - tags
  except:
    variables:
      - $TAG_PRODUCTION_DISABLED

.tag_production_branch_template:
  <<: *tags
  <<: *docker
  stage: publish-image
  allow_failure: false
  script:
    - command publish_image
  only:
    - production
  except:
    variables:
      - $TAG_PRODUCTION_DISABLED
